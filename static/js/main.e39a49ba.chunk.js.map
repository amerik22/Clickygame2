{"version":3,"sources":["components/Header/index.js","components/Card/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Card","props","name","image","id","onClick","handleImgClick","Wrapper","children","App","state","Friends","count","bestScore","ids","showFriends","_this","setState","handleIncrement","console","log","bestScoreUpdate","resetGame","friends","shuffleFriends","includes","push","i","length","j","Math","floor","random","temp","_this2","this","components_Wrapper","components_Header","map","Friend","components_Card","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"w3BAaeA,MAVf,WACE,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACPH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,kCAAkCC,IAAI,oBAC/CL,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,8FCGKI,MARf,SAAcC,GACZ,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKG,IAAKE,EAAMC,KAAMJ,IAAKG,EAAME,MAAOC,GAAIH,EAAMG,GAAIC,QAAU,kBAAMJ,EAAMK,eAAeL,EAAMG,eCC1FG,MAJf,SAAiBN,GACf,OAAOP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWI,EAAMO,kBC6E1BC,oNAzEbC,MAAQ,CAACC,UACTC,MAAO,EACPC,UAAW,EACXC,IAAK,MAELC,YAAc,WACZC,EAAKC,SAAS,CAACN,eAGjBO,gBAAkB,WAChBF,EAAKC,SAAS,CAAEL,MAAOI,EAAKN,MAAME,MAAQ,IAC1CO,QAAQC,IAAI,MAAOJ,EAAKN,MAAME,UAGhCS,gBAAkB,WACbL,EAAKN,MAAME,OAASI,EAAKN,MAAMG,UAChCG,EAAKC,SAAS,CAACJ,UAAWG,EAAKN,MAAME,QAErCI,EAAKC,SAAS,CAACL,MAAO,OAI1BU,UAAa,WACXN,EAAKC,SAAS,CAAEL,MAAO,IACvBI,EAAKC,SAAS,CAAEH,IAAK,QAGvBR,eAAiB,SAACF,GAClBe,QAAQC,IAAI,SACZJ,EAAKC,SAAS,CAACM,QAASP,EAAKQ,eAAeb,KAC5CQ,QAAQC,IAAIhB,GAERY,EAAKN,MAAMI,IAAIW,SAASrB,IAI1BY,EAAKM,YACLN,EAAKK,oBAJNL,EAAKN,MAAMI,IAAIY,KAAKtB,GACnBY,EAAKE,sBAOPM,eAAiB,SAAAb,GAEf,IADA,IAAIgB,EAAIhB,EAAQiB,OAAQ,EACjBD,EAAI,GAAG,CACZ,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOtB,EAAQgB,GACrBhB,EAAQgB,GAAKhB,EAAQkB,GACrBlB,EAAQkB,GAAKI,EACbN,IAEF,OAAOhB,2EAIF,IAAAuB,EAAAC,KACP,OACEzC,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAD,MACF3C,EAAAC,EAAAC,cAAA,oBAAYuC,KAAKzB,MAAME,MAAvB,mBAA8CuB,KAAKzB,MAAMG,UAAzD,KACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBACfsC,KAAKzB,MAAMC,QAAQ2B,IAAI,SAAAC,GAAM,OAAI7C,EAAAC,EAAAC,cAAC4C,EAAD,CAChCpC,GAAImC,EAAOnC,GACXF,KAAMqC,EAAOrC,KACbC,MAAOoC,EAAOpC,MACdG,eAAgB4B,EAAK5B,4BAjEXmC,IAAMC,kBCFxBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e39a49ba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n  <div className=\"header\">\r\n          <img src=\"./imgs/South_Park_sign_logo.png\" alt=\"South Park Sign\" ></img>\r\n          <h1>OMG You Clicked Kenny!</h1>\r\n          <h2>Click on an image to earn points, but don't click on any more than once!</h2>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n        <img alt={props.name} src={props.image} id={props.id} onClick={ () => props.handleImgClick(props.id)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Card from \"./components/Card\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Friends from \"./friends.json\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {Friends,\r\n  count: 0,\r\n  bestScore: 0,\r\n  ids: []}\r\n\r\n  showFriends = () => {\r\n    this.setState({Friends});\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    this.setState({ count: this.state.count + 1 });\r\n    console.log(\"new\", this.state.count);\r\n  };\r\n  \r\n  bestScoreUpdate = () => {\r\n    if(this.state.count >= this.state.bestScore) {\r\n      this.setState({bestScore: this.state.count});\r\n    } else {\r\n      this.setState({count: 0});\r\n    }\r\n  };\r\n  \r\n  resetGame =  () => {\r\n    this.setState({ count: 0});\r\n    this.setState({ ids: [] });\r\n  }\r\n  \r\n  handleImgClick = (id) => {\r\n  console.log(\"click\");\r\n  this.setState({friends: this.shuffleFriends(Friends) })\r\n  console.log(id);\r\n  //If Else\r\n  if(!this.state.ids.includes(id)) {\r\n   this.state.ids.push(id);\r\n    this.handleIncrement();\r\n  } else{\r\n    this.resetGame();\r\n    this.bestScoreUpdate();\r\n  }\r\n  }\r\n\r\n  shuffleFriends = Friends => {\r\n    let i = Friends.length -1;\r\n    while (i > 0) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = Friends[i];\r\n      Friends[i] = Friends[j];\r\n      Friends[j] = temp;\r\n      i--;\r\n    }\r\n    return Friends\r\n  }\r\n  \r\n\r\nrender() {\r\n  return (\r\n    <Wrapper>\r\n      <Header/>\r\n    <h2>Score: {this.state.count}  | Best Score: {this.state.bestScore} </h2> \r\n      <div className= \"grid-container\">\r\n      {this.state.Friends.map(Friend =>(<Card\r\n        id={Friend.id}\r\n        name={Friend.name}\r\n        image={Friend.image}\r\n        handleImgClick={this.handleImgClick}\r\n      />))}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n  }}\r\n\r\n  \r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}